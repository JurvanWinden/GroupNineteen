SELECT CourseName, Grade FROM PassedCoursesPerStudentRegId AS P, Courses AS C, StudentRegistrationsToDegrees as SD WHERE P.StudentRegistrationId = SD.StudentRegistrationId AND SD.StudentId = %1% AND P.DegreeId = %2% AND P.CourseId = C.CourseId ORDER BY CourseName, Grade;
WITH CompletedDegree AS (SELECT S.StudentRegistrationId, SD.DegreeId, SD.StudentId FROM StudentRegistrationsToDegrees AS SD, Degrees AS D, SumECTS AS S WHERE S.StudentRegistrationId = SD.StudentRegistrationId AND SD.DegreeId = D.DegreeId AND S.sumECTS >= TotalECTS) SELECT CompletedDegree.StudentId FROM CompletedDegree LEFT OUTER JOIN FailedCoursesPerStudentRegId ON CompletedDegree.StudentRegistrationId = FailedCoursesPerStudentRegId.StudentRegistrationId LEFT OUTER JOIN StudentGPA ON StudentGPA.StudentRegistrationId = CompletedDegree.StudentRegistrationId WHERE FailedCoursesPerStudentRegId.StudentRegistrationId IS NULL AND GPA >= %1% GROUP BY StudentId ORDER BY StudentId;
WITH ActiveStudents AS (WITH CompletedDegree AS (SELECT S.StudentRegistrationId FROM StudentRegistrationsToDegrees AS SD, Degrees AS D, SumECTS AS S WHERE S.StudentRegistrationId = SD.StudentRegistrationId AND SD.DegreeId = D.DegreeId AND S.sumECTS >= TotalECTS) SELECT StudentId, DegreeId FROM StudentRegistrationsToDegrees AS SD LEFT OUTER JOIN CompletedDegree ON SD.StudentRegistrationId = CompletedDegree.StudentRegistrationId WHERE CompletedDegree.StudentRegistrationId IS NULL), ActiveFemaleStudents AS (SELECT A.DegreeId, COUNT(A.StudentId) AS Active FROM ActiveStudents AS A INNER JOIN Students ON Students.StudentId =  A.StudentId WHERE Gender = 'F' GROUP BY A.DegreeId) SELECT A.DegreeId, (AF.Active / CAST (COUNT(A.StudentId) AS DECIMAL)) AS Percentage FROM ActiveStudents AS A, ActiveFemaleStudents AS AF WHERE A.DegreeId = AF.DegreeId GROUP BY A.DegreeId, AF.Active ORDER BY A.DegreeId, AF.Active;
WITH StudentCount AS (SELECT COUNT(Students.StudentId) AS SC FROM Degrees, StudentRegistrationsToDegrees, Students WHERE Students.StudentId = StudentRegistrationsToDegrees.StudentId AND StudentRegistrationsToDegrees.DegreeId = Degrees.DegreeId AND Dept = %1% GROUP BY Degrees.Dept), FemaleStudentCount AS (SELECT COUNT(Students.StudentId) AS FSC FROM Degrees, StudentRegistrationsToDegrees, Students WHERE Students.StudentId = StudentRegistrationsToDegrees.StudentId AND StudentRegistrationsToDegrees.DegreeId = Degrees.DegreeId AND Gender = 'F' AND Degrees.Dept = %1% GROUP BY Degrees.Dept) SELECT (FSC / CAST(SC AS DECIMAL)) AS Percentage FROM FemaleStudentCount, StudentCount;
SELECT 0;
WITH BestGrades AS (SELECT SD.StudentId FROM CourseOffers AS CO, PassedCoursesPerStudentRegId AS P, StudentRegistrationsToDegrees AS SD WHERE CO.CourseId = P.CourseId AND SD.StudentRegistrationId = P.StudentRegistrationId AND Year = 2018 AND Quartile = 1 GROUP BY SD.StudentId, Grade HAVING Grade = MAX(Grade)) SELECT StudentId, COUNT(StudentId) AS NumberOfCoursesWhereExcellent FROM BestGrades GROUP BY StudentId HAVING COUNT(StudentId) >= 3 ORDER BY StudentId, NumberOfCoursesWhereExcellent;
SELECT 0;
WITH SC AS (SELECT CourseRegistrations.CourseOfferId, COUNT(CourseRegistrations.StudentRegistrationId) as StudentCount FROM CourseRegistrations GROUP BY CourseRegistrations.CourseOfferId), AC AS (SELECT CourseOfferId, COUNT(StudentAssistants.StudentRegistrationId) as StudentAssistantCount FROM StudentAssistants GROUP BY StudentAssistants.CourseOfferId) SELECT Courses.CourseName, CourseOffers.Year, CourseOffers.Quartile FROM Courses, CourseOffers, SC, AC WHERE SC.CourseOfferId = AC.CourseOfferId AND AC.CourseOfferId = CourseOffers.CourseOfferId AND CourseOffers.CourseId = Courses.CourseId AND (AC.StudentAssistantCount * 50 <= SC.StudentCount) ORDER BY SC.CourseOfferId;